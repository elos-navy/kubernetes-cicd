{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "auxvmSshPublicKey": {
      "type": "string",
      "defaultValue": "ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA2h4PW71rJ+gQcOuj7H/uhfirCzrcnrb21w60hkf3UsAVmhQZYWpP1c8613bGdq/J2WlfQ2EtVu1JS63zAcn1U0tituwROQXPrFcGrdDM1jRs5P1teUXU5tboOUe1LEOIszG27k6HQsDfDHjMBq4SpV8U+WS16g4UhbfmtMgxIUlw0ixDY6zP2oYpgY1NnH0rfI4L5F1u1nlVskkNCmeTGDy8VD/V1wgajQijQUT48UCrnZsB90Spo19Ix01pDz0eddOXXQZeV/iNWvlwFrPzAMttGmlF37WW+SUVkWnhqenDhGjBFflCKqQ4UXu7BT+OXgH1BmsJ+aT3xEkj/7jZCw== delfin@deneb",
      "metadata": {
        "description": "Configure all linux machines with the SSH public key string, for example 'ssh-rsa AAAAB...snip...UcyupgH azureuser@linuxvm'"
      }
    },
    "auxvmSize": {
      "type": "string",
      "defaultValue": "Standard_B1s",
      "allowedValues": [
        "Standard_B1s",
        "Standard_B2s",
        "Standard_B2ms",
        "Standard_D2s_v3",
        "Standard_D2_v3",
        "Standard_DS2_v2",
        "Standard_D2_v2",
        "Standard_DS2",
        "Standard_D2",
        "Standard_A2_v2",
        "Standard_A2"
      ],
      "metadata": {
        "description": "The virutal machine size to use as AuxVM."
      }
    },
    "kubernetesVersion": {
      "type": "string",
      "defaultValue": "1.13.8",
      "allowedValues": [
        "1.13.8",
        "1.13.7",
        "1.12.8",
        "1.11.10"
      ],
      "metadata": {
        "description": "The version of the Kubernetes running in AKS."
      }
    },
    "kubernetesNodeSize": {
      "type": "string",
      "defaultValue": "Standard_DS2_v2",
      "allowedValues": [
        "Standard_B2ms",
        "Standard_D2s_v3",
        "Standard_D2_v3",
        "Standard_DS2_v2",
        "Standard_D2_v2",
        "Standard_A2m_v2",
        "Standard_E2s_v3"
      ],
      "metadata": {
        "description": "The virutal machine size to use as kubernetes nodes."
      }
    },
    "servicePrincipalAppId": {
      "type": "string",
      "defaultValue": "ddaac2d7-ef70-4ae0-8bc9-b4c2b92abe03",
      "metadata": {
        "description": "Service Principal App ID (also called Client ID) that has contributor rights to the subscription used for this deployment. It is used by the Kubernetes cluster to dynamically manage resources (e.g. user-defined load balancers)."
      }
    },
    "servicePrincipalAppKey": {
      "type": "securestring",
      "defaultValue": "/z.t1Inb9JlzLdWjZe/4hZ:mgG4L]5w/",
      "metadata": {
        "description": "Service Principal App Key (also called Client Secret) that has contributor rights to the subscription used for this deployment. It is used by the Kubernetes cluster to dynamically manage resources (e.g. user-defined load balancers)."
      }
    },
    "acrSku": {
      "type": "string",
      "metadata": {
        "description": "Tier of your Azure Container Registry."
      },
      "defaultValue": "Basic",
      "allowedValues": [
        "Basic",
        "Standard",
        "Premium"
      ]
    },
    "jenkinsAdminPassword": {
      "type": "securestring",
      "defaultValue": "admin",
      "metadata": {
        "description": "Admin password for created Jenkins instance."
      }
    },
    "applicationGitUrl": {
      "type": "string",
      "defaultValue": "https://github.com/elos-tech/openshift-cicd-app",
      "metadata": {
        "description": "Application source GIT repository URL."
      }
    }
  },
  "variables": {
    "location": "[resourceGroup().location]",
    "adminUsername": "azureuser",
    "acrAdminUserEnabled": true,
    "acrName": "[concat('acr',uniqueString(resourceGroup().id))]",
    "resourcePrefix": "auxvm",
    "vmName": "[concat(variables('resourcePrefix'), '-vm')]",
    "bootstrapExtensionName": "[concat(variables('resourcePrefix'), '-bootstrap')]",
    "auxvmDeploymentName": "auxvm-deployment",
    "aksName": "aks-cluster",
    "aksDnsPrefix": "[concat('aks', uniqueString(resourceGroup().id))]",
    "artifactsLocation": "https://raw.githubusercontent.com/elos-tech/kubernetes-cicd/master/",
    "extensionScript": "bootstrap-wrapper.sh",
    "artifactsLocationSasToken": "",
    "customScriptTemplateUrl": "[uri(variables('artifactsLocation'), concat('azure/nested/customscript.json', variables('artifactsLocationSasToken')))]",
    "auxvmTemplateUrl": "[uri(variables('artifactsLocation'), concat('azure/nested/auxvm.json', variables('artifactsLocationSasToken')))]"
  },
  "resources": [
    {
      "name": "[variables('auxvmDeploymentName')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2018-05-01",
      "dependsOn": [ ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('auxvmTemplateUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "sshPublicKey": {
            "value": "[parameters('auxvmSshPublicKey')]"
          },
          "virtualMachineSize": {
            "value": "[parameters('auxvmSize')]"
          },
          "location": {
            "value": "[variables('location')]"
          }
        }
      }
    },
    {
      "name": "[variables('bootstrapExtensionName')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2018-05-01",
      "dependsOn": [
        "[variables('auxvmDeploymentName')]",
        "[resourceId('Microsoft.ContainerService/managedClusters', variables('aksName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('customScriptTemplateUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[variables('location')]"
          },
          "extensionName": {
            "value": "[variables('bootstrapExtensionName')]"
          },
          "vmName": {
            "value": "[variables('vmName')]"
          },
          "fileUris": {
            "value": [
                "[concat(variables('artifactsLocation'), '/scripts/aks/', variables('extensionScript'), variables('artifactsLocationSasToken'))]"
            ]
          },
          "commandToExecute": {
            "value": "[concat('./', variables('extensionScript'), ' --app_id \"', parameters('servicePrincipalAppId'), '\" --app_key \"', parameters('servicePrincipalAppKey'), '\" --subscription_id \"', subscription().subscriptionId, '\" --tenant_id \"', subscription().tenantId, '\" --resource_group \"', resourceGroup().name, '\" --cluster_name \"', variables('aksName'), '\" --jenkins_admin_password \"', parameters('jenkinsAdminPassword'), '\" --application_git_url \"', parameters('applicationGitUrl'), '\" --registry_name \"', variables('acrName'), '\" --location \"', variables('location'), '\"')]"
          }
        }
      }
    },
    {
      "apiVersion": "2018-03-31",
      "type": "Microsoft.ContainerService/managedClusters",
      "name": "[variables('aksName')]",
      "location": "[variables('location')]",
      "properties": {
        "kubernetesVersion": "[parameters('kubernetesVersion')]",
        "dnsPrefix": "[variables('aksDnsPrefix')]",
        "enableRBAC": false,
        "agentPoolProfiles": [
          {
            "name": "agentpool",
            "count": 2,
            "vmSize": "[parameters('kubernetesNodeSize')]",
            "osType": "Linux",
            "storageProfile": "ManagedDisks",
            "storageTier": "Standard_LRS"
          }
        ],
        "linuxProfile": {
          "adminUsername": "[variables('adminUsername')]",
          "ssh": {
            "publicKeys": [
              {
                "path": "[concat('/home/', variables('adminUsername'), '/.ssh/authorized_keys')]",
                "keyData": "[parameters('auxvmSshPublicKey')]"
              }
            ]
          }
        },
        "servicePrincipalProfile": {
          "ClientId": "[parameters('servicePrincipalAppId')]",
          "Secret": "[parameters('servicePrincipalAppKey')]"
        }
      },
      "dependsOn": [
      ]
    },
    {
      "name": "[variables('acrName')]",
      "type": "Microsoft.ContainerRegistry/registries",
      "apiVersion": "2017-10-01",
      "location": "[variables('location')]",
      "comments": "Container registry for storing docker images",
      "tags": {
        "displayName": "Container Registry",
        "container.registry": "[variables('acrName')]"
      },
      "sku": {
        "name": "[parameters('acrSku')]",
        "tier": "[parameters('acrSku')]"
      },
      "properties": {
        "adminUserEnabled": "[variables('acrAdminUserEnabled')]"
      }
    }
  ],
  "outputs": {
    "Jenkins url": {
      "value": "[concat('https://jenkins.', reference(variables('bootstrapExtensionName')).outputs.instanceView.value)]",
      "type": "string"
    },
    "Sonarqube url": {
      "value": "[concat('https://sonarqube.', reference(variables('bootstrapExtensionName')).outputs.instanceView.value)]",
      "type": "string"
    },
    "Nexus url": {
      "value": "[concat('https://nexus.', reference(variables('bootstrapExtensionName')).outputs.instanceView.value)]",
      "type": "string"
    },
    "Application dev url": {
      "value": "[concat('https://application-dev.', reference(variables('bootstrapExtensionName')).outputs.instanceView.value)]",
      "type": "string"
    },
    "Application prod url": {
      "value": "[concat('https://application-prod.', reference(variables('bootstrapExtensionName')).outputs.instanceView.value)]",
      "type": "string"
    },
    "Auxvm ssh": {
      "type": "string",
      "value": "[concat('ssh ', variables('adminUsername'), '@', reference(variables('auxvmDeploymentName')).outputs.auxvmFqdn.value)]"
    },
    "Kubernetes master fqdn": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.ContainerService/managedClusters', variables('aksName'))).fqdn]"
    },
    "ACR fqdn": {
      "value": "[reference(resourceId('Microsoft.ContainerRegistry/registries',variables('acrName')),'2017-10-01').loginServer]",
      "type": "string"
    }
  }
}
