---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: {{ include "jenkins.fullname" . }}
  name: {{ include "jenkins.fullname" . }}
spec:
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ include "jenkins.fullname" . }}
    spec:
      serviceAccountName: jenkins
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.service.targetPort }}
        - containerPort: 50000
        livenessProbe:
          httpGet:
            path: /login
            port: {{ .Values.service.targetPort }}
            scheme: HTTP
          initialDelaySeconds: 660
          periodSeconds: 4
          successThreshold: 1
          failureThreshold: 4
          timeoutSeconds: 12
        readinessProbe:
          httpGet:
            path: /login
            port: {{ .Values.service.targetPort }}
            scheme: HTTP
          periodSeconds: 11
          successThreshold: 2
          failureThreshold: 5
          timeoutSeconds: 12
        resources:
          limits:
            cpu: 300m
            memory: 800Mi
          requests:
            cpu: 300m
            memory: 800Mi
        env:
        - name: JAVA_OPTS
          value: "-Djenkins.install.runSetupWizard=false"
        - name: JENKINS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "jenkins.fullname" . }}-admin-password
              key: password
        volumeMounts:
        - mountPath: /var/lib/jenkins
          name: jenkins-data
        lifecycle:
          postStart:
            exec:
              command: ["/bin/sh", "-c", "for i in $(seq 1 20); do if [ -f /var/lib/jenkins/jobs/{{ .Values.infra.jobName }}/nextBuildNumber ]; then NEXT_BUILD_NUMBER=$(cat /var/lib/jenkins/jobs/{{ .Values.infra.jobName }}/nextBuildNumber); else NEXT_BUILD_NUMBER=1; fi; if [ $NEXT_BUILD_NUMBER -ge 2 ]; then break; fi; if curl -f localhost:{{ .Values.service.targetPort }}/login &> /dev/null ; then curl -X POST localhost:{{ .Values.service.targetPort }}/job/{{ .Values.infra.jobName }}/build --user admin:${JENKINS_PASSWORD}; break; else sleep 10; fi; done"]
      initContainers:
      - name: setup-permissions
        image: alpine:latest
        command:
          - /bin/sh
          - -c
          - ls -l /var/lib/jenkins; chown 1001:1001 /var/lib/jenkins
        volumeMounts:
        - mountPath: /var/lib/jenkins
          name: jenkins-data
      - name: install-plugins
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        command:
          - /bin/sh
          - -c
          - install-plugins.sh < /mnt/plugins.txt
        volumeMounts:
        - mountPath: /var/lib/jenkins
          name: jenkins-data
        - mountPath: /mnt
          name: jenkins-plugins
      - name: prepare-infra-pipeline-job
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        command: ["/bin/sh", "-c", "if [ -d '/var/lib/jenkins/jobs/{{ .Values.infra.jobName }}' ]; then exit 0; fi; mkdir -p /var/lib/jenkins/jobs/{{ .Values.infra.jobName }}/builds; cd /var/lib/jenkins/jobs/{{ .Values.infra.jobName }}/builds; touch legacyIds; ln -s ./-1 lastFailedBuild; ln -s ./-1 lastStableBuild; ln -s ./-1 lastSuccessfulBuild; ln -s ./-1 lastUnstableBuild; ln -s ./-1 lastUnsuccessfulBuild; cp /mnt/config.xml /var/lib/jenkins/jobs/{{ .Values.infra.jobName }}/"]
        volumeMounts:
        - mountPath: /var/lib/jenkins
          name: jenkins-data
        - mountPath: /mnt
          name: infra-pipeline-job
      - name: prepare-app-pipeline-job
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        command: ["/bin/sh", "-c", "if [ -d '/var/lib/jenkins/jobs/{{ .Values.application.jobName }}' ]; then exit 0; fi; mkdir -p /var/lib/jenkins/jobs/{{ .Values.application.jobName }}/builds; cd /var/lib/jenkins/jobs/{{ .Values.application.jobName }}/builds; touch legacyIds; ln -s ./-1 lastFailedBuild; ln -s ./-1 lastStableBuild; ln -s ./-1 lastSuccessfulBuild; ln -s ./-1 lastUnstableBuild; ln -s ./-1 lastUnsuccessfulBuild; cp /mnt/config.xml /var/lib/jenkins/jobs/{{ .Values.application.jobName }}/"]
        volumeMounts:
        - mountPath: /var/lib/jenkins
          name: jenkins-data
        - mountPath: /mnt
          name: app-pipeline-job
      - name: remove-example-job
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        command:
          - /bin/sh
          - -c
          - rm -rf '/var/lib/jenkins/jobs/OpenShift\ Sample'
        volumeMounts:
        - mountPath: /var/lib/jenkins
          name: jenkins-data
      volumes:
      - name: jenkins-data
        persistentVolumeClaim:
          claimName: {{ include "jenkins.fullname" . }}-pv-claim
      - name: jenkins-plugins
        configMap:
          name: {{ include "jenkins.fullname" . }}-plugins
      - name: infra-pipeline-job
        configMap:
          name: {{ include "jenkins.fullname" . }}-infra-pipeline-job
      - name: app-pipeline-job
        configMap:
          name: {{ include "jenkins.fullname" . }}-app-pipeline-job
